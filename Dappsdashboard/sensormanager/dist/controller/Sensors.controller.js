sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/IconColor","sap/m/MessageToast","sap/ui/model/Filter","sap/ui/core/Fragment"],function(e,t,s,r,o){"use strict";return e.extend("kc.sensormanager.controller.Sensors",{onInit:function(){this.getSensorModel().dataLoaded().then(function(){s.show(this.getOwnerComponent().getModel("i18n").getResourceBundle().getText("msgSensorDataLoaded"),{closeOnBrowserNavigation:false})}.bind(this));this._aCustomerFilters=[];this._aStatusFilters=[]},getSensorModel:function(){return this.getOwnerComponent().getModel("sensorModel")},formatIconColor:function(e){var s=this.getSensorModel().getProperty("/threshold");if(!s){return t.Neutral}else if(e<s.warm){return t.Default}else if(e>=s.warm&&e<s.hot){return t.Critical}else{return t.Negative}},onSensorSelect:function(e){var t=this.getView().byId("sensorsList").getBinding("items"),s=e.getParameter("key"),o=this.getSensorModel().getProperty("/threshold");if(s==="Cold"){this._aStatusFilters=[new r("temperature/value","LT",o.warm,false)]}else if(s==="Warm"){this._aStatusFilters=[new r("temperature/value","BT",o.warm,o.hot,false)]}else if(s==="Hot"){this._aStatusFilters=[new r("temperature/value","GT",o.hot,false)]}else{this._aStatusFilters=[]}t.filter(this._aStatusFilters.concat(this._aCustomerFilters))},onCustomerSelect:function(){if(!this._pDialog){this._pDialog=o.load({type:"XML",name:"kc.sensormanager.view.CustomerSelectDialog",controller:this}).then(function(e){e.setModel(this.getSensorModel(),"sensorModel");e.setModel(this.getView().getModel("i18n"),"i18n");e.setMultiSelect(true);return e}.bind(this))}this._pDialog.then(function(e){e.open()})},onCustomerSelectChange:function(e){var t=e.getParameter("value");var s=new r("name","Contains",t);var o=e.getSource().getBinding("items");o.filter([s])},onCustomerSelectConfirm:function(e){var t=e.getParameter("selectedItems");var s=this.getView().byId("sensorsList").getBinding("items");this._aCustomerFilters=t.map(function(e){return new r("customer","EQ",e.getTitle())});s.filter(this._aCustomerFilters.concat(this._aStatusFilters))},navToSensorStatus:function(e){var t=e.getSource().getBindingContext("sensorModel").getProperty("index");this.getOwnerComponent().getRouter().navTo("RouteSensorStatus",{index:t})}})});
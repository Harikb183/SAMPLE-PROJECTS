//@ui5-bundle kc/sensormanager/Component-preload.js
jQuery.sap.registerPreloadedModules({
"version":"2.0",
"modules":{
	"kc/sensormanager/Component.js":function(){sap.ui.define(["sap/ui/core/UIComponent","sap/ui/Device","kc/sensormanager/model/models"],function(e,t,i){"use strict";return e.extend("kc.sensormanager.Component",{metadata:{manifest:"json"},init:function(){e.prototype.init.apply(this,arguments);this.getRouter().initialize();this.setModel(i.createDeviceModel(),"device")}})});
},
	"kc/sensormanager/controller/App.controller.js":function(){sap.ui.define(["sap/ui/core/mvc/Controller"],function(n){"use strict";return n.extend("kc.sensormanager.controller.App",{onInit:function(){}})});
},
	"kc/sensormanager/controller/SensorStatus.controller.js":function(){sap.ui.define(["sap/ui/core/mvc/Controller","sap/base/strings/formatMessage","sap/m/ValueColor"],function(e,t,o){"use strict";return e.extend("kc.sensormanager.controller.SensorStatus",{formatMessage:t,onInit:function(){this.getOwnerComponent().getRouter().getRoute("RouteSensorStatus").attachMatched(this.onRouteMatched,this)},onRouteMatched:function(e){this.getView().bindElement({path:"/sensors/"+e.getParameter("arguments").index,model:"sensorModel"})},formatValueColor:function(e,t){e=e||{};if(t<e.warm){return o.Neutral}else if(t>=e.warm&&t<e.hot){return o.Critical}else{return o.Error}},navToSensors:function(){this.getOwnerComponent().getRouter().navTo("RouteSensors")}})});
},
	"kc/sensormanager/controller/Sensors.controller.js":function(){sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/IconColor","sap/m/MessageToast","sap/ui/model/Filter","sap/ui/core/Fragment"],function(e,t,s,r,o){"use strict";return e.extend("kc.sensormanager.controller.Sensors",{onInit:function(){this.getSensorModel().dataLoaded().then(function(){s.show(this.getOwnerComponent().getModel("i18n").getResourceBundle().getText("msgSensorDataLoaded"),{closeOnBrowserNavigation:false})}.bind(this));this._aCustomerFilters=[];this._aStatusFilters=[]},getSensorModel:function(){return this.getOwnerComponent().getModel("sensorModel")},formatIconColor:function(e){var s=this.getSensorModel().getProperty("/threshold");if(!s){return t.Neutral}else if(e<s.warm){return t.Default}else if(e>=s.warm&&e<s.hot){return t.Critical}else{return t.Negative}},onSensorSelect:function(e){var t=this.getView().byId("sensorsList").getBinding("items"),s=e.getParameter("key"),o=this.getSensorModel().getProperty("/threshold");if(s==="Cold"){this._aStatusFilters=[new r("temperature/value","LT",o.warm,false)]}else if(s==="Warm"){this._aStatusFilters=[new r("temperature/value","BT",o.warm,o.hot,false)]}else if(s==="Hot"){this._aStatusFilters=[new r("temperature/value","GT",o.hot,false)]}else{this._aStatusFilters=[]}t.filter(this._aStatusFilters.concat(this._aCustomerFilters))},onCustomerSelect:function(){if(!this._pDialog){this._pDialog=o.load({type:"XML",name:"kc.sensormanager.view.CustomerSelectDialog",controller:this}).then(function(e){e.setModel(this.getSensorModel(),"sensorModel");e.setModel(this.getView().getModel("i18n"),"i18n");e.setMultiSelect(true);return e}.bind(this))}this._pDialog.then(function(e){e.open()})},onCustomerSelectChange:function(e){var t=e.getParameter("value");var s=new r("name","Contains",t);var o=e.getSource().getBinding("items");o.filter([s])},onCustomerSelectConfirm:function(e){var t=e.getParameter("selectedItems");var s=this.getView().byId("sensorsList").getBinding("items");this._aCustomerFilters=t.map(function(e){return new r("customer","EQ",e.getTitle())});s.filter(this._aCustomerFilters.concat(this._aStatusFilters))},navToSensorStatus:function(e){var t=e.getSource().getBindingContext("sensorModel").getProperty("index");this.getOwnerComponent().getRouter().navTo("RouteSensorStatus",{index:t})}})});
},
	"kc/sensormanager/i18n/i18n.properties":'# This is the resource bundle for kc.sensormanager\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=SENSOR MGR\n\n#YDES: Application description\nappDescription=The sensors manager application\n#XTIT: Main view title\ntitle=SENSOR MGR\n\nnoSensorDataText=No Sensor Data\ndistanceLabel=Distance\ndistanceUnit=km\nmsgSensorDataLoaded=All sensors online!\nmsgFilterAll=All\nmsgFilterCold=Cold\nmsgFilterWarm=Warm\nmsgFilterHot=Too Hot\ntoolTipSelectCustomer=Select Customer\ntitleSelectCustomer=Select Customers\ntitleSensorStatus=Sensor Status\ncardTitle=Customer: {0}\nlocationLabel=Location\ncardSubTitle={0}: {1}, {2}: {3}{4}\ntemperatureUnit=\\u00b0C',
	"kc/sensormanager/i18n/i18n_en.properties":'title=Keep Cool Inc. Sensor Manager\nappTitle=SENSOR MGR\nappDescription=The sensor manager application\nnoSensorDataText=No Sensor Data\ndistanceLabel=Distance\ndistanceUnit=km\nmsgSensorDataLoaded=All sensors online!\nmsgFilterAll=All\nmsgFilterCold=Cold\nmsgFilterWarm=Warm\nmsgFilterHot=Too Hot\ntoolTipSelectCustomer=Select Customer\ntitleSelectCustomer=Select Customers\ntitleSensorStatus=Sensor Status\ncardTitle=Customer: {0}\nlocationLabel=Location\ncardSubTitle={0}: {1}, {2}: {3}{4}\ntemperatureUnit=\\u00b0C',
	"kc/sensormanager/manifest.json":'{"_version":"1.28.0","sap.app":{"id":"kc.sensormanager","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","dataSources":{"sensorSource":{"type":"JSON","uri":"./localService/sensors.json"}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":false,"dependencies":{"minUI5Version":"1.84.0","libs":{"sap.m":{},"sap.ui.core":{},"sap.ui.layout":{},"sap.f":{},"sap.suite.ui.generic.template":{},"sap.suite.ui.microchart":{},"sap.ui.comp":{},"sap.ui.generic.app":{},"sap.ui.table":{},"sap.ushell":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"kc.sensormanager.i18n.i18n","supportedLocales":["de","en"],"fallbackLocale":"en"}},"sensorModel":{"type":"sap.ui.model.json.JSONModel","dataSource":"sensorSource","preload":true,"settings":{"synchronizationMode":"None","operationMode":"Server","autoExpandSelect":true,"earlyRequests":true,"groupId":"$direct"}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","viewType":"XML","async":true,"transition":"slide","viewPath":"kc.sensormanager.view","controlAggregation":"pages","controlId":"app","clearControlAggregation":false},"routes":[{"name":"RouteSensors","pattern":"","target":["TargetSensors"]},{"name":"RouteSensorStatus","pattern":"sensor/{index}","target":["TargetSensorStatus"]}],"targets":{"TargetSensors":{"viewType":"XML","transition":"slide","clearControlAggregation":false,"viewId":"Sensors","viewName":"Sensors"},"TargetSensorStatus":{"viewType":"XML","transition":"slide","viewId":"SensorStatus","viewName":"SensorStatus","viewLevel":2}}},"rootView":{"viewName":"kc.sensormanager.view.App","type":"XML","async":true,"id":"App"}},"sap.cloud":{"public":true,"service":"kc.sensormanager"}}',
	"kc/sensormanager/model/models.js":function(){sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,n){"use strict";return{createDeviceModel:function(){var i=new e(n);i.setDefaultBindingMode("OneWay");return i}}});
},
	"kc/sensormanager/utils/locate-reuse-libs.js":'(function(e){var t=function(e){var t=e;var n="";var r=["sap.apf","sap.base","sap.chart","sap.collaboration","sap.f","sap.fe","sap.fileviewer","sap.gantt","sap.landvisz","sap.m","sap.ndc","sap.ovp","sap.rules","sap.suite","sap.tnt","sap.ui","sap.uiext","sap.ushell","sap.uxap","sap.viz","sap.webanalytics","sap.zen"];function a(e,t){Object.keys(e).forEach(function(e){if(!r.some(function(t){return e===t||e.startsWith(t+".")})){if(t.length>0){t=t+","+e}else{t=e}}});return t}return new Promise(function(r,i){$.ajax(t).done(function(e){if(e){if(e["sap.ui5"]&&e["sap.ui5"].dependencies){if(e["sap.ui5"].dependencies.libs){n=a(e["sap.ui5"].dependencies.libs,n)}if(e["sap.ui5"].dependencies.components){n=a(e["sap.ui5"].dependencies.components,n)}}if(e["sap.ui5"]&&e["sap.ui5"].componentUsages){n=a(e["sap.ui5"].componentUsages,n)}}r(n)}).fail(function(t){i(new Error("Could not fetch manifest at \'"+e))})})};e.registerComponentDependencyPaths=function(e){return t(e).then(function(e){if(e&&e.length>0){var t="/sap/bc/ui2/app_index/ui5_app_info?id="+e;var n=jQuery.sap.getUriParameters().get("sap-client");if(n&&n.length===3){t=t+"&sap-client="+n}return $.ajax(t).done(function(e){if(e){Object.keys(e).forEach(function(t){var n=e[t];if(n&&n.dependencies){n.dependencies.forEach(function(e){if(e.url&&e.url.length>0&&e.type==="UI5LIB"){jQuery.sap.log.info("Registering Library "+e.componentId+" from server "+e.url);jQuery.sap.registerModulePath(e.componentId,e.url)}})}})}})}})}})(sap);var scripts=document.getElementsByTagName("script");var currentScript=document.getElementById("locate-reuse-libs");if(!currentScript){currentScript=document.currentScript}var manifestUri=currentScript.getAttribute("data-sap-ui-manifest-uri");var componentName=currentScript.getAttribute("data-sap-ui-componentName");var useMockserver=currentScript.getAttribute("data-sap-ui-use-mockserver");sap.registerComponentDependencyPaths(manifestUri).catch(function(e){jQuery.sap.log.error(e)}).finally(function(){sap.ui.getCore().attachInit(function(){jQuery.sap.require("jquery.sap.resources");var e=sap.ui.getCore().getConfiguration().getLanguage();var t=jQuery.sap.resources({url:"i18n/i18n.properties",locale:e});document.title=t.getText("appTitle")});if(componentName&&componentName.length>0){if(useMockserver&&useMockserver==="true"){sap.ui.getCore().attachInit(function(){sap.ui.require([componentName.replace(/\\./g,"/")+"/localService/mockserver"],function(e){e.init();sap.ushell.Container.createRenderer().placeAt("content")})})}else{sap.ui.require(["sap/ui/core/ComponentSupport"]);sap.ui.getCore().attachInit(function(){jQuery.sap.require("jquery.sap.resources");var e=sap.ui.getCore().getConfiguration().getLanguage();var t=jQuery.sap.resources({url:"i18n/i18n.properties",locale:e});document.title=t.getText("appTitle")})}}else{sap.ui.getCore().attachInit(function(){sap.ushell.Container.createRenderer().placeAt("content")})}});sap.registerComponentDependencyPaths(manifestUri);',
	"kc/sensormanager/view/App.view.xml":'<mvc:View\n    controllerName="kc.sensormanager.controller.App"\n    xmlns:mvc="sap.ui.core.mvc"\n    displayBlock="true"\n    xmlns="sap.m"\n><Shell id="shell"><App id="app"><pages><Page id="page" title="{i18n>title}"><content /></Page></pages></App></Shell></mvc:View>\n',
	"kc/sensormanager/view/CustomerSelectDialog.fragment.xml":'<core:FragmentDefinition\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"><SelectDialog\n        title="{i18n>titleSelectCustomer}"\n        contentHeight="38.3%"\n        rememberSelections="true"\n        confirm=".onCustomerSelectConfirm"\n        liveChange=".onCustomerSelectChange"\n        items="{\n            path: \'sensorModel>/customers\',\n            sorter: {path:\'name\'}\n        }"><StandardListItem title="{sensorModel>name}"/></SelectDialog></core:FragmentDefinition>',
	"kc/sensormanager/view/SensorStatus.view.xml":'<mvc:View \n     controllerName="kc.sensormanager.controller.SensorStatus"\n     displayBlock="true" \n     xmlns:mvc="sap.ui.core.mvc" \n     xmlns="sap.m"\n     xmlns:f="sap.f"\n     xmlns:card="sap.f.cards"\n     xmlns:mc="sap.suite.ui.microchart"><Page id="SensorStatusPage" title="{i18n>titleSensorStatus}" showNavButton="true" navButtonPress=".navToSensors"><content><VBox class="sapUiContentPadding"><f:Card><f:header><card:NumericHeader title="{parts: [\'i18n>cardTitle\', \'sensorModel>customer\'], formatter: \'.formatMessage\'}"\n                subtitle="{parts: [\n                          \'i18n>cardSubTitle\',\n                          \'i18n>locationLabel\',\n                          \'sensorModel>location\',\n                          \'i18n>distanceLabel\',\n                          \'sensorModel>distance\',\n                          \'i18n>distanceUnit\'],\n                    formatter: \'.formatMessage\'}"\n                number="{sensorModel>temperature/value}"\n                scale="{i18n>temperatureUnit}"\n                state="{parts: [\n                        \'sensorModel>/threshold\',\n                        \'sensorModel>temperature/value\'],\n                    formatter: \'.formatValueColor\'}"\n           /></f:header><f:content><FlexBox width="100%" height="15rem" alignItems="Center" class="sapUiSmallMargin"><mc:InteractiveLineChart points="{sensorModel>temperatureLog}" displayedPoints="20" selectionEnabled="false"><mc:InteractiveLineChartPoint \n                      value="{=Number.parseFloat(${sensorModel>temperature}.toFixed(2))}"\n                      color="{parts: [\'sensorModel>/threshold\', \'sensorModel>temperature\'], formatter:\'.formatValueColor\'}"\n                      label="{\n                           path: \'sensorModel>time\',\n                           type: \'sap.ui.model.type.Time\',\n                           formatOptions: {\n                               source: { pattern: \'timestamp\' },\n                               style: \'short\'\n                            }\n                        }"/></mc:InteractiveLineChart></FlexBox></f:content></f:Card></VBox></content></Page></mvc:View>',
	"kc/sensormanager/view/Sensors.view.xml":'<mvc:View\n    controllerName="kc.sensormanager.controller.Sensors"\n    xmlns:core="sap.ui.core"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:grid="sap.ui.layout.cssgrid"\n    xmlns:f="sap.f"\n    xmlns="sap.m"\n    displayBlock="true"><Page id="page" title="{i18n>title}"><headerContent><Button icon="sap-icon://menu" press=".onCustomerSelect" tooltip="{i18n>toolTipSelectCustomer}"/></headerContent><content><IconTabBar id="iconTabBar" select=".onSensorSelect" class="sapUiResponsiveContentPadding"><items><IconTabFilter showAll="true" text="{i18n>msgFilterAll}" key="All" count="{=${sensorModel>/sensors}.length}"/><IconTabSeparator/><IconTabFilter icon="sap-icon://fridge" iconColor="Default" text="{i18n>msgFilterCold}" key="Cold"/><IconTabFilter icon="sap-icon://blur" iconColor="Critical" text="{i18n>msgFilterWarm}" key="Warm"/><IconTabFilter icon="sap-icon://warning" iconColor="Negative" text="{i18n>msgFilterHot}" key="Hot"/></items><content><f:GridList id="sensorsList" items="{path: \'sensorModel>/sensors\', sorter: {path:\'customer\', group:true, descending: false}}" \n                            noDataText="{i18n>noSensorDataText}"><f:customLayout><grid:GridBoxLayout/></f:customLayout><f:items><CustomListItem type="Active" press=".navToSensorStatus"><layoutData><FlexItemData growFactor="1" shrinkFactor="0"/></layoutData><HBox justifyContent="SpaceBetween"><VBox justifyContent="SpaceBetween" class="sapUiSmallMarginTop sapUiSmallMarginBegin"><Title text="{sensorModel>location}"/><Label text="{i18n>distanceLabel}:"/></VBox><core:Icon src="sap-icon://temperature" size="2.5rem" \n                             color="{path: \'sensorModel>temperature/value\', formatter:\'.formatIconColor\'}"\n                             class="sapUiSmallMarginTop sapUiSmallMarginEnd"/></HBox><HBox justifyContent="SpaceBetween" class="sapUiTinyMarginTop sapUiSmallMarginBottom sapUiSmallMarginBeginEnd"><ObjectNumber number="{sensorModel>distance}" unit="{i18n>distanceUnit}"/></HBox></CustomListItem></f:items></f:GridList></content></IconTabBar></content></Page></mvc:View>'
}});
